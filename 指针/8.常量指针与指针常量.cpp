#include <iostream>
using namespace std;

int main()
{
	/* 
		常量指针指向的内存地址的内容不可修改，但是指向可以修改。
		指针常量的指向不能被改变，但它指向的内容是可以改变的。
		常量指针常量，指向和指向的内容都不能修改。
	*/

	// 常量指针
	const int m = 10;
	// 定义int型常量指针p1
	const int* p1 = &m;  // 只有常量指针才能指向常量
	cout << "*p1:" << *p1 << endl;  //*p1:10
	//*p1 = 200; // 会报错；常量指针指向的内存地址的内容不可修改
	int n = 20;
	p1 = &n;   // 可以改变指针的指向，使其指向其他变量
	n = 200;
	cout << "*p1:" << *p1 << endl;  //*p1:200


	// 指针常量
	int a = 30, b = 40;
	// 定义int型指针常量p2
	int* const p2 = &a; // 指针常量必须赋初始值
	//p2 = &b;   会报错。指针常量的指向不能发生变化
	*p2 = 300;  //可以通过指针常量修改其指向的变量的值，但不能改变指针本身的指向
	cout << "*p2:" << *p2 << endl;  //*p2:300
	cout << "a:" << a << endl;  //a:300

	//常量指针常量(了解即可)
	b = 40;
	const int* const p3 = &b;
	// *p3 = 400;  不能通过常量指针常量修改变量的值
	// p3 = &a;    常量指针常量的指向不能发生改变。

	// 定义常量指针常量指向常量m
	const int* const p4 = &m;


	// 只能使用常量指针指向常量字符串
	const char* p5 = "Hello World!";
	// p5[0] = 'h'  不允许
	cout << p5[0] << endl; //允许读，不允许修改

	return 0;
}